{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","getAll","a","axios","results","addNew","newPerson","post","deletePerson","person","delete","id","changePerson","put","exports","InfoMessage","message","statusClass","className","Filter","props","type","value","onInput","PersonForm","onSubmit","nameValue","event","numberValue","Persons","persons","map","index","name","toLowerCase","includes","filter","number","onClick","App","useState","setPersons","getResults","personService","catch","error","console","log","setInfoMessage","setInfoStatus","undefined","response","data","useEffect","setFilter","newName","setNewName","newNumber","setNewNumber","infoMessage","infoStatus","inputEvent","parameter","target","setTimeout","clearFields","window","confirm","preventDefault","trimmedName","trim","trimmedNumber","some","e","obj","then","_","personCopy","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b10c9fc6.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = async () => {\r\n    const results = await axios(baseUrl)\r\n    return results\r\n}\r\n\r\nconst addNew = async (newPerson) => {\r\n    const results = await axios.post(baseUrl, newPerson)\r\n    return results\r\n\r\n}\r\n\r\nconst deletePerson = async (person) => {\r\n    const results = await axios.delete(`${baseUrl}/${person.id}`)\r\n    return results\r\n}\r\n\r\nconst changePerson = async (person) => {\r\n    const results = await axios.put(`${baseUrl}/${person.id}`, person)\r\n    return results\r\n}\r\n\r\n\r\n\r\nconst exports = {\r\n    getAll: getAll,\r\n    addNew: addNew,\r\n    deletePerson: deletePerson,\r\n    changePerson: changePerson\r\n}\r\n\r\nexport default exports;","import React, {useState, useEffect} from 'react'\nimport personService from './services/persons'\nimport './styles.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  useEffect(() => {\n    getResults()\n  }, [])\n\n  async function getResults() {\n    const response = await personService.getAll().catch((error) => {\n      console.log(error)\n      setInfoMessage('error fetching data')\n      setInfoStatus('error')\n      setPersons([])\n    })\n    if (response !== undefined) {\n      setPersons(response.data)\n    }\n  }\n\n  const [filter, setFilter] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [infoMessage, setInfoMessage] = useState('')\n  const [infoStatus, setInfoStatus] = useState('success')\n\n  const onInput = (inputEvent, parameter) => {\n    const value = inputEvent.target.value\n    switch (parameter) {\n      case 'name':\n        setNewName(value)\n        break;\n      case 'filter':\n        setFilter(value)\n        break;\n      default:\n        setNewNumber(value)\n        break;\n    }\n  }\n\n  useEffect(() => {\n    if (infoMessage !== '')\n      setTimeout(function () {\n        setInfoMessage('')\n        setInfoStatus('success')\n      }\n        , 3000)\n  }, [infoMessage])\n\n  const addNewNumber = (event) => {\n    event.preventDefault()\n    const trimmedName = newName.trim()\n    const trimmedNumber = newNumber.trim()\n    if (persons.some(e => e.name === trimmedName)) {\n      if (window.confirm(`${trimmedName} is already added to phonebook, replace number with new one?`)) {\n        personService.changePerson({name: trimmedName, number: trimmedNumber, id: persons.filter(obj => obj.name === trimmedName)[0].id}).then((_) => getResults(), clearFields(), setInfoMessage(trimmedName + ' number was changed'))\n      }\n      return\n    }\n\n    const personCopy = [...persons]\n    personService.addNew({name: trimmedName, number: trimmedNumber})\n    personCopy.push({name: trimmedName, number: trimmedNumber})\n    setPersons(personCopy)\n    clearFields()\n    setInfoMessage(trimmedName + ' added')\n  }\n\n  const clearFields = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = async (person) => {\n    if (window.confirm('Delete?')) {\n      await personService.deletePerson(person).catch((error) => {\n        console.log(error)\n        setInfoMessage('Person is already deleted')\n        setInfoStatus('error')\n        getResults()\n      })\n      getResults()\n      setInfoMessage(person.name + ' was deleted')\n    }\n\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {infoMessage === '' ? <div /> : <InfoMessage message={infoMessage} statusClass={infoStatus} />}\n      <Filter value={filter} onInput={(event) => onInput(event, 'filter')} />\n      <h2>Add new</h2>\n      <PersonForm onSubmit={addNewNumber} nameValue={newName} onInput={onInput} numberValue={newNumber} />\n      <h2>Numbers</h2>\n      <Persons deletePerson={deletePerson} filter={filter} persons={persons} />\n      ...\n    </div>\n  )\n\n}\n\nconst InfoMessage = ({message, statusClass}) => {\n  return (<div className={statusClass}>{message}</div>)\n}\n\nconst Filter = (props) => {\n  return (<div>find person:<input type=\"text\" value={props.value} onInput={props.onInput} /></div>)\n}\n\nconst PersonForm = (props) => {\n\n\n  return (\n    <form onSubmit={props.onSubmit}>\n      <div>\n        name: <input value={props.nameValue} onInput={(event) => props.onInput(event, 'name')} />\n      </div>\n      <div>number: <input type=\"number\" value={props.numberValue} onInput={(event) => props.onInput(event, 'number')} /></div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>)\n}\n\nconst Persons = (props) => {\n\n  return (<> {props.persons.map((person, index) => person.name.toLowerCase().includes(props.filter.toLowerCase()) ? (\n    <div key={index}><h2 >{person.name} {person.number} <button onClick={() => props.deletePerson(person)}>DELETE</button></h2> </div>\n  ) : null)}</>)\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}